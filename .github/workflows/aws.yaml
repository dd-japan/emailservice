name: ecr push image

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - 'feature/**'
    # paths
    #   - 'src/**' # srcディレクトリ以下のファイルに変更があった場合に実行
env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: b1o7r7e0/emailservice           # set this to your Amazon ECR repository name
  # HOME: /home/runner/work/emailservice/emailservice
  REPO: emailservice-manifest
  GIT_USERNAME: dd-japan
  EMAIL: k.kyuta.821@gmail.com

permissions:
  id-token: write
  contents: read

jobs:
  push:
    name: Push Image to ECR
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "us-east-1"
          role-to-assume: "arn:aws:iam::601427279990:role/kihara-github-actions-ecr-push-role"

      # ECR ログイン
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定
        with:
          registry-type: public

      # Docker イメージを build・push する
      - name: build and push docker image to ecr
        env:
          # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # イメージを push する ECR リポジトリ名
          REPOSITORY: "b1o7r7e0/emailservice"
          # 任意のイメージタグ
          # 今回は Git のコミットハッシュにしておく
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
  
      # Checkout to manifest repo
      - name: Checkout Kubernetes manifests repo
        uses: actions/checkout@v3
        with:
          repository: dd-japan/emailservice-manifest
          token: ${{ secrets.ACCESS_TOKEN }}
          path: emailservice-manifest
          
      - name: List files for debugging
        run: ls -R emailservice-manifest
      
      - name: Update emailservice manifest
        run: | 
          sed -i 's|image: public.ecr.aws/b1o7r7e0/emailservice:[^[:space:]]*|image: public.ecr.aws/b1o7r7e0/emailservice:${{ github.sha }}|g' emailservice-manifest/manifest/emailservice.yaml
          cat cat emailservice-manifest/manifest/emailservice.yaml
      
      - name: Commit and push changes
        working-directory: emailservice-manifest
        run: |
            git config user.name "GitHub Actions Bot"
            git config user.email "actions@github.com"
            git add manifest/emailservice.yaml
            git status
            git commit -m "Update image to public.ecr.aws/b1o7r7e0/emailservice:${{ env.IMAGE_TAG }}"
            git push origin main
  # github:
  #   needs: push
  #   runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v3
    #     with:
    #       repository: ${{ env.GIT_USERNAME }}/${{ env.REPO }}
    #       path: ${{ env.REPO }}
    #       ref: master
      
      # - name: Git config
      #   env:
      #     GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
      #   run: |
      #     cd ${{ env.HOME }}/${{ env.REPO }}
      #     git config user.name ${{ env.GIT_USERNAME }}
      #     git config user.email ${{ env.EMAIL }}
      #     git remote set-url origin git@github.com:${{ env.GIT_USERNAME }}/${{ env.REPO }}.git
      #     echo "$GIT_DEPLOY_KEY" > ~/deploy_key.pem
      #     chmod 600 ~/deploy_key.pem

      # - name: Create a new branch
      #   run: |
      #     cd ${{ env.HOME }}/${{ env.REPO }}
      #     git switch -c deploy/${{ github.sha }}
